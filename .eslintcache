[{"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/index.js":"1","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/App.js":"2","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/Browse.js":"3","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookCard.jsx":"4","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Navbar.jsx":"5","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/SearchBar.jsx":"6","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Slogan.jsx":"7","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Pagination.jsx":"8","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/SignIn.jsx":"9","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/BookView.jsx":"10","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/SignUp.jsx":"11","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/About.jsx":"12","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookViewInfo.jsx":"13","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/database/books.js":"14","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/database/users.js":"15","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/TradeList.jsx":"16","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BooksTable.jsx":"17","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookForm.jsx":"18"},{"size":290,"mtime":1610439699469,"results":"19","hashOfConfig":"20"},{"size":2857,"mtime":1613738970277,"results":"21","hashOfConfig":"20"},{"size":2801,"mtime":1616838107984,"results":"22","hashOfConfig":"20"},{"size":824,"mtime":1616838559528,"results":"23","hashOfConfig":"20"},{"size":1307,"mtime":1611935216319,"results":"24","hashOfConfig":"20"},{"size":2621,"mtime":1616838512140,"results":"25","hashOfConfig":"20"},{"size":383,"mtime":1610463494503,"results":"26","hashOfConfig":"20"},{"size":872,"mtime":1611919881759,"results":"27","hashOfConfig":"20"},{"size":5088,"mtime":1616838361528,"results":"28","hashOfConfig":"20"},{"size":6682,"mtime":1616838449944,"results":"29","hashOfConfig":"20"},{"size":4840,"mtime":1611935190640,"results":"30","hashOfConfig":"20"},{"size":205,"mtime":1613747305274,"results":"31","hashOfConfig":"20"},{"size":537,"mtime":1611656760769,"results":"32","hashOfConfig":"20"},{"size":2851,"mtime":1616837649331,"results":"33","hashOfConfig":"20"},{"size":960,"mtime":1616837732916,"results":"34","hashOfConfig":"20"},{"size":2293,"mtime":1611936943348,"results":"35","hashOfConfig":"20"},{"size":2920,"mtime":1611937287975,"results":"36","hashOfConfig":"20"},{"size":6470,"mtime":1611928705443,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"mrojt8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/index.js",[],["80","81"],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/App.js",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/Browse.js",["82"],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookCard.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Navbar.jsx",["83","84","85","86"],"import React, { useReducer, useEffect, useState } from \"react\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const [isOn, setMenu] = useState(true)\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <img src=\"../../assets/logo.svg\" alt=\"\" className=\"navbar-logo\" />\r\n            <ul>\r\n                <li>\r\n                    {props.isAuth ?\r\n                        <>\r\n                            <a style={{ color: \"#FF6739\" }} onClick={() => setMenu(!isOn)}>Account</a>\r\n                            <div className=\"account-menu\" style={isOn ? { display: 'flex' } : { display: 'none' }}>\r\n                                <Link to=\"/Account/Books\">My books</Link>\r\n                                <Link to=\"/Account/Post\">Post book</Link>\r\n                                <a onClick={() => props.logout()}>Sign out</a>\r\n                            </div>\r\n                        </> :\r\n                        <Link to=\"/signIn\" style={{ color: \"#FF6739\" }}>Sign in</Link>}\r\n\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/Browse\">Browse</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/About\">About</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/SearchBar.jsx",["87","88"],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Slogan.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/Pagination.jsx",["89","90","91"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nexport default function Pagination(props) {\r\n    const {offset} = props\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <div class=\"pagination-previous pagination-group\"\r\n                onClick={() => offset === 0 ? null : props.setOffset(parseInt(offset) - 9)}>\r\n\r\n                {offset === 0 ? '' : <><span className=\"pagination-arrow prev\"> {\"<\"} </span><h3>PREV</h3></>}\r\n\r\n            </div>\r\n\r\n            <div className=\"pagination-dot\"></div>\r\n\r\n            <div className=\"pagination-next pagination-group\"\r\n                onClick={() => offset === 15 ? null : props.setOffset(parseInt(offset) + 9)}>\r\n\r\n                {props.records - 9 <= offset ? '' : <><h3>NEXT</h3><span className=\"pagination-arrow next\"> {\">\"} </span></>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/SignIn.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/BookView.jsx",["92","93","94","95","96"],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/SignUp.jsx",["97"],"import './css/style.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useReducer, useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useForm } from \"react-hook-form\";\r\nimport UsersDatabase from './database/users.js'\r\n\r\nfunction SignUp(props) {\r\n  let history = useHistory()\r\n  const [inputValues, setInputValues] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      name: \"\",\r\n      passowrd: \"\",\r\n      phone: \"\",\r\n      email: \"\"\r\n    }\r\n  );\r\n  const usersDatabase = new UsersDatabase()\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const { register, handleSubmit, errors } = useForm();\r\n  \r\n  const handleInputChange = ({ name, value }) => setInputValues({ [name]: value })\r\n\r\n  const onSubmit = (data) => {\r\n    usersDatabase.postUser(data).then((res) => {\r\n      console.log(res.message)\r\n      usersDatabase.signIn(data).then((res) => {\r\n        props.login(res.data)\r\n      })\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in-wraper\">\r\n      <div className=\"signin\">\r\n        <form className=\"signin-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n          <div className=\"signin-form-inputs\">\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n              <input type=\"text\" name=\"name\" className=\"input-orange\" ref={register({ required: true })} />\r\n              {errors.name && errors.name.type === 'required' && (<span>Name cannot be empty </span>)}\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n              <input type=\"text\" name=\"email\" className=\"input-orange\" ref={register({ required: true, pattern: /\\S+@\\S+\\.\\S+/ })} />\r\n              {(errors.email && errors.email.type === 'required' && (<span>Email cannot be empty </span>)) ||\r\n                (errors.email && errors.email.type === 'pattern' && (<span>Email address is not valid </span>))}\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n              <input type=\"text\" name=\"phone\" className=\"input-orange\" ref={register({ required: true, pattern: /^[0-9]+$/ })} />\r\n              {(errors.phone && errors.phone.type === 'required' && (<span>Phone cannot be empty </span>)) ||\r\n                (errors.phone && errors.phone.type === 'pattern' && (<span>Phone number is not valid</span>))}\r\n            </div>\r\n\r\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n            <div className=\"input-container\">\r\n              {\r\n                showPassword ?\r\n                  <>\r\n                    <input type=\"text\"\r\n                      name=\"password\"\r\n                      className=\"input-orange\"\r\n                      value={inputValues.password}\r\n                      onChange={(e) => handleInputChange(e.target)}\r\n                      ref={register({ required: true, minLength: 5 })}\r\n                    />\r\n                    <FontAwesomeIcon icon=\"eye\" onClick={() => setShowPassword(false)} className=\"eye\"></FontAwesomeIcon>\r\n                    {(errors.password && errors.password.type === 'required' && (<span>Password cannot be empty </span>)) ||\r\n                      (errors.password && errors.password.type === 'minLength' && (<span>Password must have at least 5 characters</span>))}\r\n                  </> :\r\n                  <>\r\n                    <input type=\"password\" name=\"password\" className=\"input-orange\"\r\n                      value={inputValues.password}\r\n                      onChange={(e) => handleInputChange(e.target)}\r\n                      ref={register({ required: true, minLength: 5 })}\r\n                    />\r\n                    <FontAwesomeIcon icon=\"eye-slash\" onClick={() => setShowPassword(true)} className=\"eye\"></FontAwesomeIcon>\r\n                    {(errors.password && errors.password.type === 'required' && (<span>Password cannot be empty </span>)) ||\r\n                      (errors.password && errors.password.type === 'minLength' && (<span>Password must have at least 5 characters</span>))}\r\n                  </>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"signin-form-buttons\">\r\n            <button className=\"signin-button black-button\" type=\"submit\">SIGN UP</button>\r\n\r\n            <div className=\"signup-redirect\">\r\n              <span className=\"redirect\" onClick={() => history.push(`/signin`)}>SIGN IN </span>\r\n              <span>if already have an account</span>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        <figure></figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/About.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookViewInfo.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/database/books.js",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/database/users.js",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/TradeList.jsx",[],"/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BooksTable.jsx",["98","99","100","101"],"import MaterialTable from 'material-table';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport BooksDatabase from '../database/books.js'\r\nimport UsersDatabase from '../database/users.js'\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function BooksTable(props) {\r\n    const theme = createMuiTheme({\r\n        zIndex: '-1'\r\n    });\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Cover', field: 'cover', render: rowData => <img src={rowData.cover} style={{ width: 40 }} />, editable: 'never' },\r\n        { title: 'Title', field: 'title' },\r\n        { title: 'Author', field: 'author', initialEditValue: 'initial edit value' },\r\n        { title: 'Pages', field: 'pages', type: 'numeric' },\r\n        {\r\n            title: 'Condition',\r\n            field: 'condition_fk',\r\n            lookup: { 1: 'new', 2: 'very good', 3: 'good', 4:'damaged by water', 5:'old', 6:'used' },\r\n            type: 'string'\r\n        },\r\n        { title: 'Publishing House', field: 'publishing_house', type: 'string' },\r\n    ]);\r\n\r\n    const [data, setData] = useState(props.user.books);\r\n    const booksDatabase = new BooksDatabase;\r\n    const usersDatabase = new UsersDatabase;\r\n\r\n    return (\r\n        <MuiThemeProvider theme={theme} style={{ zIndex: 0 }}\r\n        >\r\n            <MaterialTable\r\n                title=\"MY BOOKS\"\r\n                columns={columns}\r\n                data={data}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) => {\r\n                        return booksDatabase.updateBook(newData).then((res)=>{\r\n\r\n                            usersDatabase.getUser(props.user.id).then((res)=>{\r\n                                props.setUser(res.data)\r\n                            })\r\n\r\n                            console.log(res.message)\r\n                            \r\n                            const dataUpdate = [...data];\r\n                            const index = oldData.tableData.id;\r\n                            dataUpdate[index] = newData;\r\n                            setData([...dataUpdate]);\r\n                        })\r\n                    },\r\n                    onRowDelete: (oldData) => {\r\n                        return booksDatabase.deleteBook(oldData.id).then((res)=>{\r\n                \r\n                            usersDatabase.getUser(props.user.id).then((res)=>{\r\n                                props.setUser(res.data)\r\n                            })\r\n                            \r\n                            console.log(res.message)\r\n\r\n                            const dataDelete = [...data];\r\n                            const index = oldData.tableData.id;\r\n                            dataDelete.splice(index, 1);\r\n                            setData([...dataDelete]);\r\n                        })\r\n                    }\r\n\r\n                }}\r\n            />\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n","/mnt/c/Users/Alexandra/Desktop/JS/projects/bookcorner/src/components/BookForm.jsx",["102","103"],"import { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useReducer, useState } from \"react\";\r\nimport BooksDatabase from '../database/books.js'\r\nimport UsersDatabase from '../database/users.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BookCard from './BookCard.jsx'\r\n\r\nexport default function BookForm(props) {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [preview, setPreview] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [coverUrl, setCoverUrl] = useState(null)\r\n  const [inputValues, setInputValues] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      owner_id: props.user.id,\r\n      author: \"\",\r\n      title: \"\",\r\n      pages: \"\",\r\n      description: \"description is not needed\",\r\n      condition: \"\",\r\n      publishing_house: \"\",\r\n    }\r\n  );\r\n  const history = useHistory();\r\n\r\n  const handleCancel = () => {\r\n    history.push(`/browse`)\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    console.log(inputValues)\r\n    const booksDatabase = new BooksDatabase()\r\n    const usersDatabase = new UsersDatabase()\r\n\r\n    booksDatabase.postBook(inputValues)\r\n      .then((res) => {\r\n        const bookId = res.book_id\r\n\r\n        booksDatabase.uploadBookCover(selectedFile)\r\n          .then((res) => {\r\n            const fileName = res.file_name\r\n\r\n            booksDatabase.addBookCover({ book_fk: bookId, url: fileName, is_cover_photo: 1 })\r\n              .then(() => {\r\n                usersDatabase.getUser(props.user.id).then(res => {\r\n                  props.setUser(res.data)\r\n                  history.push(`/browse/${bookId}`)\r\n                })\r\n              })\r\n          })\r\n      })\r\n  }\r\n\r\n  function onChangePicture(e) {\r\n    const reader = new FileReader();\r\n    setSelectedFile(e.target.files[0]);\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    reader.addEventListener(\"load\", () => {\r\n      setCoverUrl(reader.result)\r\n    });\r\n  }\r\n\r\n  function handlePreview() {\r\n    setPreview(true)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"book-form\">\r\n      <div className=\"book-field\">\r\n\r\n        <div className=\"cover-field\">\r\n          <label htmlFor=\"cover\">COVER : <span className=\"mandatory-field\">*</span></label>\r\n          <input name=\"cover\" type=\"file\" accept=\"image/*\"\r\n            ref={register({ required: true })}\r\n            onChange={onChangePicture}\r\n          />\r\n          {errors.cover && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Cover must be uploaded</span>)}\r\n          <BookCard\r\n            src={coverUrl}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"info-field\">\r\n          <label htmlFor=\"title\">TITLE : <span className=\"mandatory-field\">*</span></label>\r\n          <input\r\n            name=\"title\"\r\n            className=\"input-orange\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => setInputValues({ [e.target.name]: e.target.value })}\r\n          />\r\n          {errors.title && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Title must be specified</span>)}\r\n\r\n          <label htmlFor=\"title\">AUTHOR : <span className=\"mandatory-field\">*</span></label>\r\n          <input\r\n            name=\"author\"\r\n            className=\"input-orange\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => setInputValues({ [e.target.name]: e.target.value })}\r\n          />\r\n          {errors.author && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Author must be specified</span>)}\r\n\r\n          <div className=\"pages-condition-fields\">\r\n            <div className=\"wraper pages\">\r\n              <label htmlFor=\"pages\">PAGES : <span className=\"mandatory-field\">*</span></label>\r\n              <input\r\n                name=\"pages\"\r\n                id=\"pages\"\r\n                type=\"number\"\r\n                className=\"input-orange\"\r\n                ref={register({ required: true })}\r\n                onChange={(e) => setInputValues({ [e.target.name]: e.target.value })}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"wraper condition\">\r\n              <label htmlFor=\"condition\">CONDITION : <span className=\"mandatory-field\">*</span></label>\r\n              <select\r\n                name=\"condition\"\r\n                className=\"input-orange\"\r\n                ref={register({ required: true })}\r\n                onChange={(e) => setInputValues({ [e.target.name]: e.target.value })}\r\n              >\r\n                <option value=\"0\" defaultValue>select a condition</option>\r\n                <option value=\"1\">new</option>\r\n                <option value=\"2\">very good</option>\r\n                <option value=\"3\">good </option>\r\n                <option value=\"4\">damaged by water</option>\r\n                <option value=\"5\">old</option>\r\n                <option value=\"6\">used</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {errors.pages && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Pages must be specified</span>)}\r\n          {errors.pages && errors.pages.type === 'pattern' && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Pages must be specified in numbers</span>)}\r\n          {errors.condition && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Condition must be chosen</span>)}\r\n\r\n          <label htmlFor=\"publishing_house\">PUBLISHING HOUSE : <span className=\"mandatory-field\">*</span></label>\r\n          <input\r\n            name=\"publishing_house\"\r\n            className=\"input-orange\"\r\n            ref={register({ required: true })}\r\n            onChange={(e) => setInputValues({ [e.target.name]: e.target.value })} />\r\n          {errors.publishing_house && (<span className=\"error\"><FontAwesomeIcon icon=\"exclamation\" className=\"exclamation\"></FontAwesomeIcon>Publishing house must be specified</span>)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"book-form-buttons\">\r\n        <button className=\"black-button\" onClick={handleCancel}>CANCEL</button>\r\n        <button type=\"submit\" className=\"orange-button\">POST</button>\r\n      </div>\r\n\r\n    </form >\r\n  );\r\n}",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":21,"column":8,"nodeType":"110","endLine":21,"endColumn":16,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":1,"column":29,"nodeType":"114","messageId":"115","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":16,"column":29,"nodeType":"119","endLine":16,"endColumn":92},{"ruleId":"117","severity":1,"message":"118","line":20,"column":33,"nodeType":"119","endLine":20,"endColumn":67},{"ruleId":"120","severity":1,"message":"121","line":19,"column":31,"nodeType":"122","messageId":"123","endLine":19,"endColumn":47,"fix":"124"},{"ruleId":"120","severity":1,"message":"121","line":64,"column":54,"nodeType":"122","messageId":"123","endLine":64,"endColumn":70,"fix":"125"},{"ruleId":"112","severity":1,"message":"116","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"126","line":1,"column":28,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"127","line":1,"column":38,"nodeType":"114","messageId":"115","endLine":1,"endColumn":44},{"ruleId":"128","severity":1,"message":"129","line":20,"column":27,"nodeType":"130","messageId":"131","endLine":20,"endColumn":44,"fix":"132"},{"ruleId":"128","severity":1,"message":"129","line":21,"column":27,"nodeType":"130","messageId":"131","endLine":21,"endColumn":44,"fix":"133"},{"ruleId":"108","severity":1,"message":"134","line":28,"column":8,"nodeType":"135","endLine":28,"endColumn":10},{"ruleId":"108","severity":1,"message":"136","line":28,"column":8,"nodeType":"135","endLine":28,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":99,"column":56,"nodeType":"140","messageId":"141","endLine":99,"endColumn":58},{"ruleId":"112","severity":1,"message":"116","line":3,"column":29,"nodeType":"114","messageId":"115","endLine":3,"endColumn":38},{"ruleId":"112","severity":1,"message":"142","line":12,"column":21,"nodeType":"114","messageId":"115","endLine":12,"endColumn":31},{"ruleId":"143","severity":1,"message":"144","line":13,"column":62,"nodeType":"119","endLine":13,"endColumn":111},{"ruleId":"128","severity":1,"message":"129","line":27,"column":27,"nodeType":"130","messageId":"131","endLine":27,"endColumn":44,"fix":"145"},{"ruleId":"128","severity":1,"message":"129","line":28,"column":27,"nodeType":"130","messageId":"131","endLine":28,"endColumn":44,"fix":"146"},{"ruleId":"112","severity":1,"message":"147","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":17},{"ruleId":"112","severity":1,"message":"148","line":66,"column":12,"nodeType":"114","messageId":"115","endLine":66,"endColumn":25},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBooks'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-computed-key","Unnecessarily computed property ['termError'] found.","Property","unnecessarilyComputedProperty",{"range":"152","text":"153"},{"range":"154","text":"153"},"'useState' is defined but never used.","'useRef' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"155","text":"156"},{"range":"157","text":"156"},"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has missing dependencies: 'booksDatabase', 'id', and 'props.user.id'. Either include them or remove the dependency array.",["158"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setColumns' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"159","text":"156"},{"range":"160","text":"156"},"'preview' is assigned a value but never used.","'handlePreview' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},[592,605],"'termError'",[2249,2262],[897,897],"()",[943,943],{"desc":"163","fix":"164"},[1172,1172],[1218,1218],"Update the dependencies array to be: [fetchBooks, offset]",{"range":"165","text":"166"},"Update the dependencies array to be: [booksDatabase, id, props.user.id]",{"range":"167","text":"168"},[850,858],"[fetchBooks, offset]",[1135,1137],"[booksDatabase, id, props.user.id]"]